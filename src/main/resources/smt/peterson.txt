(declare-fun flag1_w01 () Int)
(declare-fun flag2_w01 () Int)
(declare-fun check_w01 () Bool)
(declare-fun flag1_w11 () Int)
(declare-fun turn_w11 () Int)
(declare-fun flag2_r11 () Int)
(declare-fun turn_r12 () Int)
(declare-fun check_w11 () Bool)
(declare-fun x_w11 () Int)
(declare-fun x_r12 () Int)
(declare-fun check_w12 () Bool)
(declare-fun flag1_w12 () Int)
(declare-fun flag2_w21 () Int)
(declare-fun turn_w21 () Int)
(declare-fun flag1_r21 () Int)
(declare-fun turn_r22 () Int)
(declare-fun check_w21 () Bool)
(declare-fun x_w21 () Int)
(declare-fun x_r22 () Int)
(declare-fun check_w22 () Bool)
(declare-fun flag2_w22 () Int)
(declare-fun check_r31 () Bool)
(declare-fun return_peterson_w31 () Int)
(assert (= flag1_w01 0))
(assert (= flag2_w01 0))
(assert (= check_w01 false))
(assert (= flag1_w11 1))
(assert (= turn_w11 1))
(assert (= check_w11 (or (distinct flag2_r11 1) (distinct turn_r12 1))))
(assert (= x_w11 0))
(assert (= check_w12 (> x_r12 0)))
(assert (= flag1_w12 0))
(assert (= flag2_w21 1))
(assert (= turn_w21 0))
(assert (= check_w21 (or (distinct flag1_r21 1) (distinct turn_r22 0))))
(assert (= x_w21 1))
(assert (= check_w22 (< x_r22 1)))
(assert (= flag2_w22 0))
(assert (and (=> (= check_r31 true) (= return_peterson_w31 1)) (=> (not (= check_r31 true)) (= return_peterson_w31 0))))
(assert (or (or (or (or (= check_r31 check_w01) (= check_r31 check_w11)) (= check_r31 check_w12)) (= check_r31 check_w21)) (= check_r31 check_w22)))
(assert (=> (not (= check_r31 check_w01) ) (or (or (or (= check_r31 check_w11) (= check_r31 check_w12)) (= check_r31 check_w21)) (= check_r31 check_w22))))
(assert (= flag1_r21 flag1_w01))
(assert (= flag2_r11 flag2_w01))
(assert (= check_r31 check_w01))
(assert (or (or (= flag2_r11 flag2_w01) (= flag2_r11 flag2_w21)) (= flag2_r11 flag2_w22)))
(assert (or (= turn_r12 turn_w11) (= turn_r12 turn_w21)))
(assert (or (= x_r12 x_w11) (= x_r12 x_w21)))
(assert (or (or (= flag1_r21 flag1_w01) (= flag1_r21 flag1_w11)) (= flag1_r21 flag1_w12)))
(assert (or (= turn_r22 turn_w21) (= turn_r22 turn_w11)))
(assert (or (= x_r22 x_w21) (= x_r22 x_w11)))
(assert (not (= return_peterson_w31 0)))
(check-sat)
(get-model)